#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node* left;
    struct node* right;
};

struct node* createNode(int data) {
    struct node* newNode = (struct node*)malloc(sizeof(struct node));
    newNode->data = data;
    newNode->left = newNode->right = NULL;
    return newNode;
}

void inOrder(struct node* root) {
    if (root != NULL) {
        inOrder(root->left);  // Traverse left subtree
        printf("%d ", root->data);  // Visit node
        inOrder(root->right);  // Traverse right subtree
    }
}

void preOrder(struct node* root) {
    if (root != NULL) {
        printf("%d ", root->data);  // Visit node
        preOrder(root->left);  // Traverse left subtree
        preOrder(root->right);  // Traverse right subtree
    }
}

void postOrder(struct node* root) {
    if (root != NULL) {
        postOrder(root->left);  // Traverse left subtree
        postOrder(root->right);  // Traverse right subtree
        printf("%d ", root->data);  // Visit node
    }
}

int main() {
    struct node* root = createNode(1);
    root->left = createNode(2);
    root->right = createNode(3);
    root->left->left = createNode(4);
    root->left->right = createNode(5);
    printf("In-order traversal: ");
    inOrder(root);
    printf("\n");

    printf("Pre-order traversal: ");
    preOrder(root);
    printf("\n");
    printf("Post-order traversal: ");
    postOrder(root);
    printf("\n");

    return 0;}
