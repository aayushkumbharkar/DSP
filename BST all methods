#include <stdio.h>
#include <stdlib.h>

struct node
{
    struct node* left;
    int data;
    struct node* right;
};

struct node* insert(struct node* root, int data)
{
    struct node* ptr = root;
    struct node* n = malloc(sizeof(struct node));
    n->left = NULL;
    n->data = data;
    n->right = NULL;

    if (root == NULL)
        return n;

    while(1)
    {
        if (data > ptr->data)
        {
            if (ptr->right == NULL)
            {
                ptr->right = n;
                break;
            }
            else
                ptr = ptr->right;
        }
        else if (data < ptr->data)
        {
            if (ptr->left == NULL)
            {
                ptr->left = n;
                break;
            }
            else
                ptr = ptr->left;
        }
    }
    return root;
}

void display(struct node* root)
{
    struct node* ptr = root;

    if (ptr == NULL)
        return;

    display(ptr->left);
    int d = ptr->data;
    printf("%d ", d);
    display(ptr->right);
}

struct node* findMin(struct node* root)
{
    while (root->left != NULL)
        root = root->left;
    return root;
}

struct node* delete(struct node* root, int data)
{
    if (root == NULL)
        return root;

    if (data < root->data)
        root->left = delete(root->left, data);

    else if (data > root->data)
        root->right = delete(root->right, data);

    else
    {
        if (root->left == NULL)
        {
            struct node* temp = root->right;
            free(root);
            return temp;
        }
        else if (root->right == NULL)
        {
            struct node* temp = root->left;
            free(root);
            return temp;
        }

        struct node* temp = findMin(root->right);

        root->data = temp->data;

        root->right = delete(root->right, temp->data);
    }
    return root;
}

int main()
{
    struct node* root = malloc(sizeof(struct node));
    root->left = NULL;
    root->data = 70;
    root->right = NULL;

    printf("1: Insert data\n2: Display Tree\n3: Delete data\n4: Exit");
    int ch = 0;

    while (ch != 4)
    {
        printf("\nEnter your choice: ");
        scanf("%d", &ch);

        switch(ch)
        {
            case 1:
                int n;
                printf("Enter a no: ");
                scanf("%d", &n);
                root = insert(root, n);
                break;

            case 2:
                printf("Tree In-order: ");
                display(root);
                printf("\n");
                break;

            case 3:
                int delData;
                printf("Enter the value to delete: ");
                scanf("%d", &delData);
                root = delete(root, delData);
                break;

            case 4:
                break;

            default:
                printf("Wrong Choice!!");
        }
    }
    printf("Exiting.....\n");
    return 0;
}
